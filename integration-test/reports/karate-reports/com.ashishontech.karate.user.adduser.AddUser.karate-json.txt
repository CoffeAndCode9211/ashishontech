{"failedCount":0,"prefixedPath":"classpath:com\/ashishontech\/karate\/user\/adduser\/AddUser.feature","packageQualifiedName":"com.ashishontech.karate.user.adduser.AddUser","loopIndex":-1,"relativePath":"com\/ashishontech\/karate\/user\/adduser\/AddUser.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":63146175,"millis":63.146175,"status":"passed"},"step":{"comments":["# global variable for this feature file"],"background":true,"line":5,"prefix":"*","index":0,"text":"def baseUrl = karate.properties['baseUrl']"}},{"result":{"nanos":329259,"millis":0.329259,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"url baseUrl"}},{"result":{"nanos":35132141,"millis":35.132141,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":2,"text":"def postJson = {userName:'Hello',password:'123'}"}},{"result":{"nanos":2374702,"millis":2.374702,"status":"passed"},"step":{"comments":["# call once before any test execution. Useful for Data setup","#    * callonce read('classpath:preCall.feature');","# call after all scenarios are executed in this feature file. Useful for Data clean up"],"background":true,"line":13,"prefix":"*","index":3,"text":"configure afterFeature = function(){ karate.print('post feature logic goes here'); }"}},{"result":{"nanos":7179292,"millis":7.179292,"status":"passed"},"step":{"line":17,"prefix":"Given","index":0,"text":"path '\/karate\/users'"}},{"result":{"nanos":28189,"millis":0.028189,"status":"passed"},"step":{"line":18,"prefix":"And","index":1,"text":"request postJson"}},{"result":{"nanos":202217546,"millis":202.217546,"status":"passed"},"step":{"line":19,"prefix":"When","index":2,"text":"method POST"},"stepLog":"22:51:01.102 request:\n1 > POST http:\/\/localhost:8080\/karate\/users\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 37\n1 > Host: localhost:8080\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_40)\n1 > Accept-Encoding: gzip,deflate\n{\"password\":\"123\",\"userName\":\"Hello\"}\n\n22:51:01.141 response time in milliseconds: 36\n1 < 200\n1 < Content-Type: application\/json\n1 < Content-Length: 22\n1 < Date: Sat, 15 May 2021 17:21:01 GMT\n1 < Keep-Alive: timeout=60\n1 < Connection: keep-alive\n{\"message\":\"success\"}\n"},{"result":{"nanos":13793,"millis":0.013793,"status":"passed"},"step":{"line":20,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":6292929,"millis":6.292929,"status":"passed"},"step":{"line":21,"prefix":"And","index":4,"text":"match response == {'message' : 'success' }"}}],"executorName":"pool-2-thread-1","line":15,"name":"Save User Detail","description":"","durationMillis":316.714026,"startTime":1621099260728,"failed":false,"refId":"[1:15]","endTime":1621099261148,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":62950775,"millis":62.950775,"status":"passed"},"step":{"comments":["# global variable for this feature file"],"background":true,"line":5,"prefix":"*","index":0,"text":"def baseUrl = karate.properties['baseUrl']"}},{"result":{"nanos":276437,"millis":0.276437,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"url baseUrl"}},{"result":{"nanos":35819230,"millis":35.81923,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":2,"text":"def postJson = {userName:'Hello',password:'123'}"}},{"result":{"nanos":2390692,"millis":2.390692,"status":"passed"},"step":{"comments":["# call once before any test execution. Useful for Data setup","#    * callonce read('classpath:preCall.feature');","# call after all scenarios are executed in this feature file. Useful for Data clean up"],"background":true,"line":13,"prefix":"*","index":3,"text":"configure afterFeature = function(){ karate.print('post feature logic goes here'); }"}},{"result":{"nanos":6573580,"millis":6.57358,"status":"passed"},"step":{"line":26,"prefix":"Given","index":0,"text":"path '\/karate\/users'"}},{"result":{"nanos":2235750,"millis":2.23575,"status":"passed"},"step":{"line":27,"prefix":"And","index":1,"text":"request null"}},{"result":{"nanos":203260708,"millis":203.260708,"status":"passed"},"step":{"line":28,"prefix":"When","index":2,"text":"method POST"},"stepLog":"22:51:01.101 request:\n1 > POST http:\/\/localhost:8080\/karate\/users\n1 > Host: localhost:8080\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_40)\n1 > Accept-Encoding: gzip,deflate\n\n\n22:51:01.143 response time in milliseconds: 39\n1 < 400\n1 < Content-Type: application\/json\n1 < Transfer-Encoding: chunked\n1 < Date: Sat, 15 May 2021 17:21:01 GMT\n1 < Connection: close\n{\"path\":\"\\\/karate\\\/users\",\"trace\":\"org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<java.lang.Object> com.ashishontech.demo.controller.KarateController.addUser(com.ashishontech.demo.dto.KarateDTO)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:161)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:131)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:170)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:652)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.lang.Thread.run(Thread.java:745)\\n\",\"error\":\"Bad Request\",\"message\":\"Required request body is missing: public org.springframework.http.ResponseEntity<java.lang.Object> com.ashishontech.demo.controller.KarateController.addUser(com.ashishontech.demo.dto.KarateDTO)\",\"timestamp\":\"2021-05-15T17:21:01.131+00:00\",\"status\":400}\n"},{"result":{"nanos":5674,"millis":0.005674,"status":"passed"},"step":{"line":29,"prefix":"Then","index":3,"text":"status 400"}},{"result":{"nanos":15578143,"millis":15.578143,"status":"passed"},"step":{"line":30,"prefix":"And","index":4,"text":"match response == {\"timestamp\":\"#string\",\"status\":400,\"error\":\"#string\",\"trace\":\"#string\",\"message\":\"#string\",\"path\":\"\/karate\/users\"}"}}],"line":35,"description":"validate different scenarios for bad request","durationMillis":329.090989,"failed":false,"executorName":"pool-2-thread-2","name":"1 - No Request Body:","startTime":1621099260728,"refId":"[2.1:35]","endTime":1621099261161,"exampleData":{"index":"1","useCase":"No Request Body","requestJson":"null","status":"400","response":"{\"timestamp\":\"#string\",\"status\":400,\"error\":\"#string\",\"trace\":\"#string\",\"message\":\"#string\",\"path\":\"\/karate\/users\"}"},"exampleIndex":0},{"sectionIndex":1,"stepResults":[{"result":{"nanos":63221601,"millis":63.221601,"status":"passed"},"step":{"comments":["# global variable for this feature file"],"background":true,"line":5,"prefix":"*","index":0,"text":"def baseUrl = karate.properties['baseUrl']"}},{"result":{"nanos":9118,"millis":0.009118,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"url baseUrl"}},{"result":{"nanos":34351883,"millis":34.351883,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":2,"text":"def postJson = {userName:'Hello',password:'123'}"}},{"result":{"nanos":1874314,"millis":1.874314,"status":"passed"},"step":{"comments":["# call once before any test execution. Useful for Data setup","#    * callonce read('classpath:preCall.feature');","# call after all scenarios are executed in this feature file. Useful for Data clean up"],"background":true,"line":13,"prefix":"*","index":3,"text":"configure afterFeature = function(){ karate.print('post feature logic goes here'); }"}},{"result":{"nanos":9379854,"millis":9.379854,"status":"passed"},"step":{"line":26,"prefix":"Given","index":0,"text":"path '\/karate\/users'"}},{"result":{"nanos":1002477,"millis":1.002477,"status":"passed"},"step":{"line":27,"prefix":"And","index":1,"text":"request 'test'"}},{"result":{"nanos":207902224,"millis":207.902224,"status":"passed"},"step":{"line":28,"prefix":"When","index":2,"text":"method POST"},"stepLog":"22:51:01.102 request:\n1 > POST http:\/\/localhost:8080\/karate\/users\n1 > Content-Type: text\/plain; charset=UTF-8\n1 > Content-Length: 4\n1 > Host: localhost:8080\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_40)\n1 > Accept-Encoding: gzip,deflate\ntest\n\n22:51:01.148 response time in milliseconds: 36\n1 < 415\n1 < Accept: application\/json, application\/*+json\n1 < Content-Type: application\/json\n1 < Transfer-Encoding: chunked\n1 < Date: Sat, 15 May 2021 17:21:01 GMT\n1 < Keep-Alive: timeout=60\n1 < Connection: keep-alive\n{\"path\":\"\\\/karate\\\/users\",\"trace\":\"org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'text\\\/plain;charset=UTF-8' not supported\\n\\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:207)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:158)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:131)\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:170)\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:652)\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.lang.Thread.run(Thread.java:745)\\n\",\"error\":\"Unsupported Media Type\",\"message\":\"Content type 'text\\\/plain;charset=UTF-8' not supported\",\"timestamp\":\"2021-05-15T17:21:01.135+00:00\",\"status\":415}\n"},{"result":{"nanos":9250,"millis":0.00925,"status":"passed"},"step":{"line":29,"prefix":"Then","index":3,"text":"status 415"}},{"result":{"nanos":700657,"millis":0.700657,"status":"passed"},"step":{"line":30,"prefix":"And","index":4,"text":"match response == {\"timestamp\":\"#string\",\"status\":415,\"error\":\"#string\",\"trace\":\"#string\",\"message\":\"#string\",\"path\":\"\/karate\/users\"}"}}],"line":36,"description":"validate different scenarios for bad request","durationMillis":318.451378,"failed":false,"executorName":"pool-2-thread-3","name":"2 - Wrong Request Body:","startTime":1621099260728,"refId":"[2.2:36]","endTime":1621099261151,"exampleData":{"index":"2","useCase":"Wrong Request Body","requestJson":"'test'","status":"415","response":"{\"timestamp\":\"#string\",\"status\":415,\"error\":\"#string\",\"trace\":\"#string\",\"message\":\"#string\",\"path\":\"\/karate\/users\"}"},"exampleIndex":1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":64191552,"millis":64.191552,"status":"passed"},"step":{"comments":["# global variable for this feature file"],"background":true,"line":5,"prefix":"*","index":0,"text":"def baseUrl = karate.properties['baseUrl']"}},{"result":{"nanos":321097,"millis":0.321097,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"url baseUrl"}},{"result":{"nanos":34888745,"millis":34.888745,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":2,"text":"def postJson = {userName:'Hello',password:'123'}"}},{"result":{"nanos":2685576,"millis":2.685576,"status":"passed"},"step":{"comments":["# call once before any test execution. Useful for Data setup","#    * callonce read('classpath:preCall.feature');","# call after all scenarios are executed in this feature file. Useful for Data clean up"],"background":true,"line":13,"prefix":"*","index":3,"text":"configure afterFeature = function(){ karate.print('post feature logic goes here'); }"}},{"result":{"nanos":8219181,"millis":8.219181,"status":"passed"},"step":{"line":26,"prefix":"Given","index":0,"text":"path '\/karate\/users'"}},{"result":{"nanos":83596,"millis":0.083596,"status":"passed"},"step":{"line":27,"prefix":"And","index":1,"text":"request {}"}},{"result":{"nanos":201803394,"millis":201.803394,"status":"passed"},"step":{"line":28,"prefix":"When","index":2,"text":"method POST"},"stepLog":"22:51:01.102 request:\n1 > POST http:\/\/localhost:8080\/karate\/users\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 2\n1 > Host: localhost:8080\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_40)\n1 > Accept-Encoding: gzip,deflate\n{}\n\n22:51:01.140 response time in milliseconds: 38\n1 < 400\n1 < Content-Type: application\/json\n1 < Transfer-Encoding: chunked\n1 < Date: Sat, 15 May 2021 17:21:01 GMT\n1 < Connection: close\n{\"password\":\"must not be null\",\"userName\":\"must not be blank\"}\n"},{"result":{"nanos":5712,"millis":0.005712,"status":"passed"},"step":{"line":29,"prefix":"Then","index":3,"text":"status 400"}},{"result":{"nanos":6017371,"millis":6.017371,"status":"passed"},"step":{"line":30,"prefix":"And","index":4,"text":"match response == {\"password\":\"must not be null\",\"userName\":\"must not be blank\"}"}}],"line":37,"description":"validate different scenarios for bad request","durationMillis":318.216224,"failed":false,"executorName":"pool-2-thread-4","name":"3 - Empty Request Body:","startTime":1621099260728,"refId":"[2.3:37]","endTime":1621099261149,"exampleData":{"index":"3","useCase":"Empty Request Body","requestJson":"{}","status":"400","response":"{\"password\":\"must not be null\",\"userName\":\"must not be blank\"}"},"exampleIndex":2},{"sectionIndex":1,"stepResults":[{"result":{"nanos":64969606,"millis":64.969606,"status":"passed"},"step":{"comments":["# global variable for this feature file"],"background":true,"line":5,"prefix":"*","index":0,"text":"def baseUrl = karate.properties['baseUrl']"}},{"result":{"nanos":6032,"millis":0.006032,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"url baseUrl"}},{"result":{"nanos":36302288,"millis":36.302288,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":2,"text":"def postJson = {userName:'Hello',password:'123'}"}},{"result":{"nanos":541428,"millis":0.541428,"status":"passed"},"step":{"comments":["# call once before any test execution. Useful for Data setup","#    * callonce read('classpath:preCall.feature');","# call after all scenarios are executed in this feature file. Useful for Data clean up"],"background":true,"line":13,"prefix":"*","index":3,"text":"configure afterFeature = function(){ karate.print('post feature logic goes here'); }"}},{"result":{"nanos":26367225,"millis":26.367225,"status":"passed"},"step":{"line":26,"prefix":"Given","index":0,"text":"path '\/karate\/users'"}},{"result":{"nanos":115031,"millis":0.115031,"status":"passed"},"step":{"line":27,"prefix":"And","index":1,"text":"request {'password': '123'}"}},{"result":{"nanos":186012828,"millis":186.012828,"status":"passed"},"step":{"line":28,"prefix":"When","index":2,"text":"method POST"},"stepLog":"22:51:01.102 request:\n1 > POST http:\/\/localhost:8080\/karate\/users\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 18\n1 > Host: localhost:8080\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_40)\n1 > Accept-Encoding: gzip,deflate\n{\"password\":\"123\"}\n\n22:51:01.144 response time in milliseconds: 41\n1 < 400\n1 < Content-Type: application\/json\n1 < Transfer-Encoding: chunked\n1 < Date: Sat, 15 May 2021 17:21:01 GMT\n1 < Connection: close\n{\"userName\":\"must not be blank\"}\n"},{"result":{"nanos":5682,"millis":0.005682,"status":"passed"},"step":{"line":29,"prefix":"Then","index":3,"text":"status 400"}},{"result":{"nanos":12337870,"millis":12.33787,"status":"passed"},"step":{"line":30,"prefix":"And","index":4,"text":"match response == {\"userName\":\"must not be blank\"}"}}],"line":38,"description":"validate different scenarios for bad request","durationMillis":326.65799,"failed":false,"executorName":"pool-2-thread-5","name":"4 - UserName is Null:","startTime":1621099260728,"refId":"[2.4:38]","endTime":1621099261157,"exampleData":{"index":"4","useCase":"UserName is Null","requestJson":"{'password': '123'}","status":"400","response":"{\"userName\":\"must not be blank\"}"},"exampleIndex":3},{"sectionIndex":1,"stepResults":[{"result":{"nanos":441891,"millis":0.441891,"status":"passed"},"step":{"comments":["# global variable for this feature file"],"background":true,"line":5,"prefix":"*","index":0,"text":"def baseUrl = karate.properties['baseUrl']"}},{"result":{"nanos":7889,"millis":0.007889,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"url baseUrl"}},{"result":{"nanos":174173,"millis":0.174173,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":2,"text":"def postJson = {userName:'Hello',password:'123'}"}},{"result":{"nanos":544828,"millis":0.544828,"status":"passed"},"step":{"comments":["# call once before any test execution. Useful for Data setup","#    * callonce read('classpath:preCall.feature');","# call after all scenarios are executed in this feature file. Useful for Data clean up"],"background":true,"line":13,"prefix":"*","index":3,"text":"configure afterFeature = function(){ karate.print('post feature logic goes here'); }"}},{"result":{"nanos":283456,"millis":0.283456,"status":"passed"},"step":{"line":26,"prefix":"Given","index":0,"text":"path '\/karate\/users'"}},{"result":{"nanos":85495,"millis":0.085495,"status":"passed"},"step":{"line":27,"prefix":"And","index":1,"text":"request {\"userName\": \"\",\"password\": \"123\"}"}},{"result":{"nanos":11391080,"millis":11.39108,"status":"passed"},"step":{"line":28,"prefix":"When","index":2,"text":"method POST"},"stepLog":"22:51:01.164 request:\n1 > POST http:\/\/localhost:8080\/karate\/users\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 32\n1 > Host: localhost:8080\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_40)\n1 > Accept-Encoding: gzip,deflate\n{\"password\":\"123\",\"userName\":\"\"}\n\n22:51:01.172 response time in milliseconds: 8\n1 < 400\n1 < Content-Type: application\/json\n1 < Transfer-Encoding: chunked\n1 < Date: Sat, 15 May 2021 17:21:01 GMT\n1 < Connection: close\n{\"userName\":\"must not be blank\"}\n"},{"result":{"nanos":10554,"millis":0.010554,"status":"passed"},"step":{"line":29,"prefix":"Then","index":3,"text":"status 400"}},{"result":{"nanos":237033,"millis":0.237033,"status":"passed"},"step":{"line":30,"prefix":"And","index":4,"text":"match response == {\"userName\":\"must not be blank\"}"}}],"line":39,"description":"validate different scenarios for bad request","durationMillis":13.176399,"failed":false,"executorName":"pool-2-thread-1","name":"5 - UserName is Empty:","startTime":1621099261160,"refId":"[2.5:39]","endTime":1621099261175,"exampleData":{"index":"5","useCase":"UserName is Empty","requestJson":"{\"userName\": \"\",\"password\": \"123\"}","status":"400","response":"{\"userName\":\"must not be blank\"}"},"exampleIndex":4},{"sectionIndex":1,"stepResults":[{"result":{"nanos":463613,"millis":0.463613,"status":"passed"},"step":{"comments":["# global variable for this feature file"],"background":true,"line":5,"prefix":"*","index":0,"text":"def baseUrl = karate.properties['baseUrl']"}},{"result":{"nanos":10583,"millis":0.010583,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"url baseUrl"}},{"result":{"nanos":194923,"millis":0.194923,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":2,"text":"def postJson = {userName:'Hello',password:'123'}"}},{"result":{"nanos":147475,"millis":0.147475,"status":"passed"},"step":{"comments":["# call once before any test execution. Useful for Data setup","#    * callonce read('classpath:preCall.feature');","# call after all scenarios are executed in this feature file. Useful for Data clean up"],"background":true,"line":13,"prefix":"*","index":3,"text":"configure afterFeature = function(){ karate.print('post feature logic goes here'); }"}},{"result":{"nanos":221864,"millis":0.221864,"status":"passed"},"step":{"line":26,"prefix":"Given","index":0,"text":"path '\/karate\/users'"}},{"result":{"nanos":65574,"millis":0.065574,"status":"passed"},"step":{"line":27,"prefix":"And","index":1,"text":"request {\"userName\": \"Test\"}"}},{"result":{"nanos":22499618,"millis":22.499618,"status":"passed"},"step":{"line":28,"prefix":"When","index":2,"text":"method POST"},"stepLog":"22:51:01.166 request:\n1 > POST http:\/\/localhost:8080\/karate\/users\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 19\n1 > Host: localhost:8080\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_40)\n1 > Accept-Encoding: gzip,deflate\n{\"userName\":\"Test\"}\n\n22:51:01.176 response time in milliseconds: 10\n1 < 400\n1 < Content-Type: application\/json\n1 < Transfer-Encoding: chunked\n1 < Date: Sat, 15 May 2021 17:21:01 GMT\n1 < Connection: close\n{\"password\":\"must not be null\"}\n"},{"result":{"nanos":9940,"millis":0.00994,"status":"passed"},"step":{"line":29,"prefix":"Then","index":3,"text":"status 400"}},{"result":{"nanos":198305,"millis":0.198305,"status":"passed"},"step":{"line":30,"prefix":"And","index":4,"text":"match response == {\"password\":\"must not be null\"}"}}],"line":40,"description":"validate different scenarios for bad request","durationMillis":23.811895,"failed":false,"executorName":"pool-2-thread-4","name":"6 - Password is Null:","startTime":1621099261158,"refId":"[2.6:40]","endTime":1621099261182,"exampleData":{"index":"6","useCase":"Password is Null","requestJson":"{\"userName\": \"Test\"}","status":"400","response":"{\"password\":\"must not be null\"}"},"exampleIndex":5}],"callDepth":0,"name":"Test Save User Detail","description":"","resultDate":"2021-05-15 10:51:01 PM","durationMillis":1646.118901,"passedCount":7}